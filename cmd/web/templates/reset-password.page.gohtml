{{template "base" .}}

{{define "title"}}
Reset Password
{{end}}
    

{{define "content"}}
    <h2 class="mt-5">Reset Password</h2>
    <hr>
    
    <div class="alert alert-danger text-center d-none" id="reset-password-messages"></div>   
    <form action="" method="post" name="reset-password-form" id="reset-password-form" class="d-block needs-validation" autocomplete="off" novalidate>
        
        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" required autocomplete="password-new">
        </div>

        <div class="mb-3">
            <label for="verify-password" class="form-label">Verify Password</label>
            <input type="password" class="form-control" id="verify-password" name="verify-password" required autocomplete="password-new">
        </div>

        <hr>

        <a href="javascript:void(0)" id="login" class="btn btn-primary" onclick="val()">Reset Password</a>
    </form>
{{end}}

{{define "js"}}
<script>
    const messages = document.getElementById("reset-password-messages");
    const showError = (msg) => {
        messages.classList.remove("d-none");
        messages.classList.remove("alert-success");
        messages.classList.add("alert-danger");
        messages.innerText = msg;
    }
    
    const showSuccess = () => {
        messages.classList.remove("d-none");
        messages.classList.add("alert-success");
        messages.classList.remove("alert-danger");
        messages.innerText = "Password Reset";
    }
    
    
    const val = () => {
        const password = document.getElementById('password').value;
        const verifyPassword = document.getElementById('verify-password').value;
        
        let form = document.getElementById("reset-password-form")
        
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated");
            return;
        }
        
        if (password !== verifyPassword) {
            showError("Passwords do not match")
            return;
        }
        let payload = {
            password,
            email : '{{index .Data "email"}}'
        }
        
        const requestOptions = {
            method :"post",
            headers : {
                Accept : 'application/json',
                "Content-Type" : 'application/json',
            },
            body : JSON.stringify(payload)
        }
        
        fetch('{{.API}}/reset-password', requestOptions)
            .then(response => response.json())
            .then(response => {
                console.log(response)
                if (response.error === false) {
                    showSuccess();
                    //setTimeout(()=> location.href = '/login', 2000)
                } else { 
                    showError(response.message)
                }
                
            })
        
        form.classList.add("was-validated");
    }
</script>
{{end}}