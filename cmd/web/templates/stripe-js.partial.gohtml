{{define "stripe-js"}}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        let card;
        let stripe;
        const cardMessages = document.getElementById("card-messages");
        const payButton = document.getElementById("pay-button");
        const processing = document.getElementById("processing-payment");
        
        stripe = Stripe("{{.StripePublishable}}")
        const hidePayButton = () => {
            payButton.classList.add("d-none");
            processing.classList.remove("d-none");
        }
        const showPayButton = () => {
            payButton.classList.remove("d-none");
            processing.classList.add("d-none");
        }
        
        const showCardError = (msg) => {
            document.getElementById("card-messages").classList.remove("d-none");
            document.getElementById("card-messages").classList.remove("alert-success");
            document.getElementById("card-messages").classList.add("alert-danger");
            document.getElementById("card-messages").innerText = msg;
        }
        
        const showCardSuccess = () => {
            document.getElementById("card-messages").classList.remove("d-none");
            document.getElementById("card-messages").classList.add("alert-success");
            document.getElementById("card-messages").classList.remove("alert-danger");
            document.getElementById("card-messages").innerText = "Transaction Successful";
        }
        
        const val = () => {
            let form = document.getElementById("charge-form")
            
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return;
            }
            
            let amountToCharge = document.getElementById("amount").value;
            let payload = {
                amount : amountToCharge,
                currency : "usd",
            }
            
            const requestOptions = {
                method :"post",
                headers : {
                    Accept : 'application/json',
                    "Content-Type" : 'application/json',
                },
                body : JSON.stringify(payload)
            }
            
            fetch('{{.API}}/payment-intent', requestOptions)
                .then(response => response.text())
                .then(response => {
                    let data;
                    try {
                        data = JSON.parse(response)
                        stripe.confirmCardPayment(data.client_secret, {
                            payment_method : {
                                card,
                                billing_details:{
                                    name: document.getElementById("cardholder-name").value,
                                }
                            }
                        })
                        .then(result => {
                            if (result.error) {
                                showCardError(result.error.message)
                                showPayButton();
                            } else if (result.paymentIntent) {
                                if (result.paymentIntent.status === "succeeded") {
                                    document.getElementById("payment-method").value = result.paymentIntent.payment_method;
                                    document.getElementById("payment-intent").value = result.paymentIntent.id;
                                    document.getElementById("amount").value = result.paymentIntent.amount;
                                    document.getElementById("payment-currency").value = result.paymentIntent.currency;
                                    processing.classList.add("d-none");
                                    
                                    showCardSuccess();
                                    document.getElementById("charge-form").submit();
                                }
                            }
                        })
                    } catch (err) {
                        console.log(err);
                        showCardError("Invalid response from payment gateway");
                        showPayButton();
                    }
                })
            
            form.classList.add("was-validated");
            hidePayButton();
        }

        (() => {
            const elements = stripe.elements();
            const style = {
                base : {
                    fontSize : "16px",
                    
                }
            }
            card = elements.create("card", {
                style,
            })
            
            card.mount("#card-element")
            
            card.addEventListener('change', (event) => {
                let displayError = document.getElementById("card-errors");
                
                if (event.error){
                    displayError.classList.remove('d-none');
                    displayError.textContent = event.error.message;
                } else {
                    displayError.classList.add('d-none');
                    displayError.textContent = '';
                }
            })
            
        })();
        
    </script>
    
{{end}}