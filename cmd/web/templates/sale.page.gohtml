{{template "base" .}}

{{define "title"}}{{index .StringMap "title"}}{{end}}

{{define "content"}} 
    <h2 class="mt-5">{{index .StringMap "title"}}</h2>
    <span id="refunded" class="badge bg-danger d-none">{{index .StringMap "refund-status-text"}}</span>
    <span id="charged" class="badge bg-success d-none">Charged</span>
    <hr>
    <div id='messages' class="alert-danger text-center d-none">
        
    </div>
        
    <div>
        <strong>Order No:</strong> <span id="order-no"></span><br>
        <strong>Customer:</strong> <span id="customer"></span><br>
        <strong>Product:</strong> <span id="product"></span><br>
        <strong>Quantity:</strong> <span id="quantity"></span><br>
        <strong>Total Sale:</strong> <span id="amount"></span><br>
    </div>

    <hr>

    <a href="{{index .StringMap "cancel"}}" class="btn btn-info">Cancel</a>
    <a id='refund-btn' href="#" class="btn btn-warning d-none">{{index .StringMap "refund-text"}}</a>

    <input type="hidden" id="pi" value="">
    <input type="hidden" id="charge-amount" value="">
    <input type="hidden" id="currency" value="">
{{end}}

{{define "js"}}
<script>
        
const token = localStorage.getItem("token");
const id = window.location.pathname.split('/').pop();
const messages = document.getElementById("messages");

const showError = (msg) => {
    messages.classList.add("alert-danger");
    messages.classList.remove("alert-success");
    messages.classList.remove("d-none");
    messages.innerText = msg;
}

const showSuccess = (msg) => {
    
    messages.classList.remove("alert-danger");
    messages.classList.add("alert-success");
    messages.classList.remove("d-none");
    messages.innerText = msg;
}

document.addEventListener('DOMContentLoaded', ()=> {
    const requestOptions = {
        method : "post",
        headers : {
            "Accept" : "application/json",
            "Content-Type" : "application/json",
            "Authorization" : `Bearer ${token}`,
        },
    }
    
    fetch(`{{.API}}/admin/sales/${id}`, requestOptions)
        .then(response => response.json())
        .then(sale => {
            if (!sale) {
                return;
            }
            
            document.getElementById("order-no").innerHTML = sale.id;
            document.getElementById("customer").innerHTML = `${sale.customer.first_name}, ${sale.customer.last_name}`;
            document.getElementById("product").innerHTML = sale.widget.id;
            document.getElementById("quantity").innerHTML = sale.quantity;
            document.getElementById("amount").innerHTML = formatCurrency(sale.transaction.amount);
            
            document.getElementById("pi").value = sale.transaction.payment_intent;
            document.getElementById("charge-amount").value = sale.transaction.amount;
            document.getElementById("currency").value = sale.transaction.currency;
            
            if (sale.status_id === 1) {
                document.getElementById("refund-btn").classList.remove("d-none");
                document.getElementById("charged").classList.remove("d-none");
            } else {
                document.getElementById("refunded").classList.remove("d-none");
            }
            
        })
})
document.getElementById("refund-btn").addEventListener("click", ()=>{
    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to undo this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "{{index .StringMap "refund-text"}}"
    }).then((result) => {
        if (result.isConfirmed) {
            const payload = {
                pi:document.getElementById("pi").value,
                currency:document.getElementById("currency").value,
                amount:parseInt(document.getElementById("charge-amount").value, 10),
                id : parseInt(id, 10)
            }
            
            const requestOptions = {
                method : "post",
                headers : {
                    "Accept" : "application/json",
                    "Content-Type" : "application/json",
                    "Authorization" : `Bearer ${token}`,
                },
                body: JSON.stringify(payload)
            }
            
            fetch(`{{.API}}{{index .StringMap "refund-url"}}`, requestOptions)
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        showError(data.message) 
                    } else {
                        showSuccess({{index .StringMap "refund-status-message"}})
                        document.getElementById("refund-btn").classList.add("d-none");
                        document.getElementById("charged").classList.add("d-none");
                        document.getElementById("refunded").classList.remove("d-none");
                    }
                })
            
        }
    });
})
</script>
    
{{end}}